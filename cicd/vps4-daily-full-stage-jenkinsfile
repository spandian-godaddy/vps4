import hudson.model.*
import groovy.transform.Field

@Field def VPS4_VERSION
pipeline {
    agent { label "vps4-test-slave" }
    options {
        skipStagesAfterUnstable()
        timestamps()
    }
    stages {
        stage("Daily full phase3 tests in stage") {
            steps {
                load("/home/jenkins/vps4_latest_version.properties")
                echo "vps4 version: ${VPS4_VERSION}"

                timeout(time:120, unit:'MINUTES') {
                    build job: 'daily_full_stage_phase_3_test', parameters: [string(name: 'VPS4_VERSION', value: VPS4_VERSION)]
                }
             }
        }
    }
    post {
        success {
            cleanupEnvironment()
            slackSend(color: '#00CD48', message: "vps4 DAILY PHASE 3 TESTS *SUCCESS*. Job '${env.JOB_NAME} [${VPS4_VERSION}]' (${env.BUILD_URL})")
        }
        failure {
            slackSend(color: '#ff0000', message: "vps4 DAILY PHASE 3 TESTS *FAILURE*. Job '${env.JOB_NAME} [${VPS4_VERSION}]' (${env.BUILD_URL})")
        }
    }
}

private void cleanupEnvironment() {
    if (currentBuild.currentResult == 'SUCCESS') {
        cleanWs cleanWhenAborted: false, cleanWhenFailure: false, cleanWhenNotBuilt: false, cleanWhenUnstable: false
    } else {
        echo "Skipping workspace cleanup due to errors in build"
    }
}
