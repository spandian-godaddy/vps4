// This is not actually referenced anywhere, but it is a copy of the Jenkins job which is a groovy script stored only in Jenkins.

import jenkins.model.*
import hudson.model.*
import jenkins.model.Jenkins
import com.cloudbees.plugins.credentials.*
import com.cloudbees.plugins.credentials.impl.*
import com.cloudbees.plugins.credentials.domains.*
import com.cloudbees.jenkins.plugins.sshcredentials.impl.*
import com.cloudbees.jenkins.plugins.awscredentials.AWSCredentialsImpl
import org.jenkinsci.plugins.plaincredentials.*

def changePassword = { id, accessKey, secretKey ->
    def creds = com.cloudbees.plugins.credentials.CredentialsProvider.lookupCredentials(
        com.cloudbees.jenkins.plugins.awscredentials.AWSCredentialsImpl.class,
        Jenkins.instance
    )
    def c = creds.findResult { it.id == id ? it : null }
    if ( c ) {
        println "found credential ${c.id} for accessKey ${c.accessKey}"

        def credentials_store = Jenkins.instance.getExtensionList(
            'com.cloudbees.plugins.credentials.SystemCredentialsProvider'
            )[0].getStore()

        def result = credentials_store.updateCredentials(
            com.cloudbees.plugins.credentials.domains.Domain.global(), 
            c, 
            new AWSCredentialsImpl(c.scope, id, accessKey, secretKey, c.description)
            )

        if (result) {
            println "password changed for ${accessKey}" 
        } else {
            println "failed to change password for ${accessKey}"
        }
    } else {
        println "could not find credential for ${accessKey}"
    }
}

println "Starting..."

def build = this.getProperty('binding').getVariable('build')
def listener = this.getProperty('binding').getVariable('listener')
def env = build.getEnvironment(listener)

changePassword(env.credIdName, env.newAccessKeyId, env.newSecretAccessKey)

println "Finished"