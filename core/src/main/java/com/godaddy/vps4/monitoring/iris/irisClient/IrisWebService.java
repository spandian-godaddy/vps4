
package com.godaddy.vps4.monitoring.iris.irisClient;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "IrisWebService", targetNamespace = "http://tempuri.org/", wsdlLocation = "https://iris-ws.int.godaddy.com/iriswebservice.asmx?wsdl")
public class IrisWebService
    extends Service
{

    private final static URL IRISWEBSERVICE_WSDL_LOCATION;
    private final static WebServiceException IRISWEBSERVICE_EXCEPTION;
    private final static QName IRISWEBSERVICE_QNAME = new QName("http://tempuri.org/", "IrisWebService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("https://iris-ws.int.godaddy.com/iriswebservice.asmx?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        IRISWEBSERVICE_WSDL_LOCATION = url;
        IRISWEBSERVICE_EXCEPTION = e;
    }

    public IrisWebService() {
        super(__getWsdlLocation(), IRISWEBSERVICE_QNAME);
    }

    public IrisWebService(WebServiceFeature... features) {
        super(__getWsdlLocation(), IRISWEBSERVICE_QNAME, features);
    }

    public IrisWebService(URL wsdlLocation) {
        super(wsdlLocation, IRISWEBSERVICE_QNAME);
    }

    public IrisWebService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, IRISWEBSERVICE_QNAME, features);
    }

    public IrisWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public IrisWebService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns IrisWebServiceSoap
     */
    @WebEndpoint(name = "IrisWebServiceSoap")
    public IrisWebServiceSoap getIrisWebServiceSoap() {
        return super.getPort(new QName("http://tempuri.org/", "IrisWebServiceSoap"), IrisWebServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IrisWebServiceSoap
     */
    @WebEndpoint(name = "IrisWebServiceSoap")
    public IrisWebServiceSoap getIrisWebServiceSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "IrisWebServiceSoap"), IrisWebServiceSoap.class, features);
    }

    /**
     * 
     * @return
     *     returns IrisWebServiceSoap
     */
    @WebEndpoint(name = "IrisWebServiceSoap12")
    public IrisWebServiceSoap getIrisWebServiceSoap12() {
        return super.getPort(new QName("http://tempuri.org/", "IrisWebServiceSoap12"), IrisWebServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IrisWebServiceSoap
     */
    @WebEndpoint(name = "IrisWebServiceSoap12")
    public IrisWebServiceSoap getIrisWebServiceSoap12(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "IrisWebServiceSoap12"), IrisWebServiceSoap.class, features);
    }

    private static URL __getWsdlLocation() {
        if (IRISWEBSERVICE_EXCEPTION!= null) {
            throw IRISWEBSERVICE_EXCEPTION;
        }
        return IRISWEBSERVICE_WSDL_LOCATION;
    }

}
